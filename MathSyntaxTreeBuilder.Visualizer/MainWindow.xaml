<Window x:Class="MathSyntaxTreeBuilder.Visualizer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MathSyntaxTreeBuilder.Visualizer"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=local:ViewModel, IsDesignTimeCreatable=False}" 

        Title="Dani f(x)" Height="450" Width="800"
        Background="#333">
    <Window.Resources>
        <Style TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="Slider">
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
    </Window.Resources>
    <Window.Style>
        <Style TargetType="Window">
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="TextBlock.FontFamily" Value="Consolas"/>
            <Setter Property="TextBlock.Foreground" Value="Yellow"/>
        </Style>
    </Window.Style>
    <Grid>



        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="500"/>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- User Input and Length Limiter -->
        <StackPanel Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3">
            <TextBox Text="{Binding UserInput, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     FontWeight="Bold"
                     FontSize="18" Padding="10"/>

            <Grid Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Slider Minimum="0" 
                        IsSnapToTickEnabled="True" TickFrequency="1"
                        Value="{Binding LengthLimit, Mode=TwoWay}"
                        TickPlacement="BottomRight"
                        Maximum="{Binding UserInput.Length}"/>
                <Grid x:Name="CharactersGrid" Margin="1 10 0 0" Grid.Row="1">
                    <Grid.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="FontSize" Value="15"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="HorizontalAlignment" Value="Right"/>
                        </Style>
                    </Grid.Resources>
                </Grid>
            </Grid>

            

        </StackPanel>

        <!-- Tree -->
        <Grid Grid.Column="0" Grid.Row="1" >

            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Tree Canvas -->
            <Grid >
                <Canvas ClipToBounds="True" x:Name="TreeCanvas" HorizontalAlignment="Stretch"
                        Background="DarkSlateGray">
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="SizeChanged">
                            <b:InvokeCommandAction Command="{Binding TreeCanvasSizeChanged}" PassEventArgsToCommand="True"/>
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </Canvas>
                <Button Content="Reduce" Padding="10" Margin="10"
                        Command="{Binding ReduceCommand}"
                        HorizontalAlignment="Left" VerticalAlignment="Top"/>
            </Grid>
            

            <!-- Tree Details -->
            <Grid Grid.Row="1" Margin="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="90"/>
                    <ColumnDefinition Width="90"/>
                    <ColumnDefinition Width="90"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="24"/>
                    <RowDefinition Height="24"/>
                    <RowDefinition Height="24"/>
                    <RowDefinition Height="24"/>
                </Grid.RowDefinitions>
                <TextBlock Foreground="White" Grid.Row="0" Grid.Column="0" Text="Token"/>
                <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding Tree.LeftOverToken}"/>

                <TextBlock Foreground="White" Grid.Row="1" Grid.Column="0" Text="ScopeDepth"/>
                <TextBlock Grid.Row="1" Grid.Column="1"  Text="{Binding Tree.CurrentDepth}"/>

                <TextBlock Foreground="White" Grid.Row="2" Grid.Column="0" Text="Op"/>
                <TextBlock Grid.Row="2" Grid.Column="1"  Text="{Binding Tree.LastOperation}"/>

                <TextBlock Foreground="White" Grid.Row="3" Grid.Column="0" Text="Vars"/>
                <TextBlock Grid.Row="3" Grid.Column="1"  Text="{Binding Tree.VariablesText}"/>

                <TextBlock Foreground="White" Grid.Row="0" Grid.Column="2" Text="Input"/>
                <TextBlock Grid.Row="0" Grid.Column="3"  Text="{Binding ProcessedInput}"/>

                <TextBlock Foreground="White" Grid.Row="1" Grid.Column="2" Text="V. Spacing"/>
                <Slider Grid.Row="1" Grid.Column="3" Value="{Binding TreeVerticalSpacing}" Minimum="0" Maximum="100"/>

                <TextBlock Foreground="White" Grid.Row="2" Grid.Column="2" Text="H. Spacing" />
                <Slider Grid.Row="2" Grid.Column="3" Value="{Binding TreeHorizontalSpacing}" Minimum="0" Maximum="100"/>

                <TextBlock Foreground="White" Grid.Row="3" Grid.Column="2" Text="Is polynomial"/>
                <TextBlock Grid.Row="3" Grid.Column="3"  Text="{Binding Tree.IsPolynomial}"/>

            </Grid>

        </Grid>

        <!-- Middle Splitter -->
        <GridSplitter Grid.Column="1" Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>

        <!-- Function -->
        <Grid Grid.Column="2" Grid.Row="1" Background="DarkSlateGray">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Slider Grid.Column="1" Grid.Row="0" Margin="5" Minimum="1" Maximum="200" Value="{Binding FunctionXFactor}" />
            <Slider Grid.Column="0" Grid.Row="1" Margin="5" Minimum="1" Maximum="200" Value="{Binding FunctionYFactor}" Orientation="Vertical" VerticalAlignment="Stretch" />
            <Canvas ClipToBounds="True" x:Name="FunctionCanvas" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.Row="1" Grid.Column="1">
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="SizeChanged">
                        <b:InvokeCommandAction Command="{Binding FunctionCanvasSizeChanged}" PassEventArgsToCommand="True"/>
                    </b:EventTrigger>
                </b:Interaction.Triggers>
            </Canvas>
        </Grid>

        <!-- Footer -->
        <StackPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3">
            <TextBox FontSize="18" Padding="10" IsReadOnly="True" Text="{Binding OutputExpression}"/>
            <TextBox FontSize="18" Padding="10" IsReadOnly="True" Text="{Binding Result}"/>
        </StackPanel>


    </Grid>
</Window>
